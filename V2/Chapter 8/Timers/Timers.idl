// Timers.idl : IDL source for Timers.dll
//

// This file will be processed by the MIDL tool to
// produce the type library (Timers.tlb) and marshalling code.

import "oaidl.idl";
import "ocidl.idl";
	[
		object,
		uuid(8DC0EEEC-FA21-4044-A142-6F83BC55F24A),
		oleautomation,
		helpstring("IStopwatch Interface"),
		pointer_default(unique)
	]
	interface IStopwatch : IUnknown
	{
		[helpstring("method Start")] HRESULT Start();
		[helpstring("method ElapsedTime")] HRESULT ElapsedTime([out, retval] float* Time);
		[propget, helpstring("Returns/sets the overhead time")] HRESULT Overhead([out, retval] float *pVal);
		[propput, helpstring("Returns/sets the overhead time")] HRESULT Overhead([in] float newVal);
	};

	[
		object,
		dual,
		oleautomation,
		uuid(8ECA2E64-E725-4C95-A345-AED8CB7BAFD4),
		helpstring("IStopwatch2 Interface"),
		pointer_default(unique)

	]
	interface IStopwatch2 : IDispatch
	{
		[id(1), helpstring("Start the timer")]
		HRESULT Start();
		[id(DISPID_VALUE), helpstring("Returns the number of seconds that have passed since Start was called")]
		HRESULT ElapsedTime([out, retval] float *Time);
		[id(2), propget, helpstring("Returns/sets the overhead time using the timer.")]
		HRESULT Overhead([out, retval] float *pVal);
		[id(2), propput, helpstring("Returns/sets t he overhead time using the timer.")]
		HRESULT Overhead([in] float newVal);
	};

	#define MAJORVERSION 2
	#define MINORVERSION 2
	#define VERSION MAJORVERSION.MINORVERSION
	enum TmLibraryVersion
	{
		tmLibraryVersionMajor = MAJORVERSION,
		tmLibraryVersionMinor = MINORVERSION
	};

	[
		uuid(00D050EA-8533-48B3-878D-00BE7519C8FB),
		version(VERSION),
		helpstring("Timers 2.0 Type Library")
	]
	library TIMERSLib
	{
		importlib("stdole32.tlb");
		importlib("stdole2.tlb");

		[
			uuid(90236F32-CB2C-40F2-9D8F-FC643DB636A2),
			version(2.0),
			helpstring("Stopwatch Component")
		]
		coclass Stopwatch
		{
			[default] dispinterface IStopwatch2;
			interface IStopwatch;
		};
	};
